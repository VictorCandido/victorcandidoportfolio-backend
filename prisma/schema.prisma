generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProeficiencyEnum {
  BEGINNER
  INTERMEDIATE
  EXPERT
}

enum VisibilityEnum {
  PUBLIC
  PRIVATE
}

model User {
  id            String @id @default(uuid())
  email         String @unique
  password_hash String

  Profile           Profile[]
  Experience        Experience[]
  Project           Project[]
  Skill             Skill[]
  PortfolioSettings PortfolioSettings[]

  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Profile {
  id             String  @id @default(uuid())
  firstName      String
  lastName       String
  headline       String?
  bio            String?
  location       String?
  profilePicture String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Experience {
  id          String    @id @default(uuid())
  title       String
  company     String
  location    String?
  startDate   DateTime
  endDate     DateTime?
  description String?   @db.Text

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Project {
  id           String    @id @default(uuid())
  title        String
  description  String?   @db.Text
  startDate    DateTime?
  endDate      DateTime?
  projectUrl   String?
  projectImage String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Skill {
  id          String           @id @default(uuid())
  skillName   String
  proficiency ProeficiencyEnum

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime
}

model PortfolioSettings {
  id             String         @id @default(uuid())
  visibility     VisibilityEnum @default(PRIVATE)
  customEndpoint String         @unique

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime
}
